@page "/customerspage"
@using GalaxySoftwareCRM.Shared
@using GalaxySoftwareCRM.Client.Services
@using GalaxySoftwareCRM.Client.Components 
@using NpgsqlTypes
@inject IDataService service
@inject ActionService actionservice
@inject IDialogService DialogService
@*@inject HttpClient Http*@



<PageTitle>Customer</PageTitle>

<h1>Customer Pages</h1>

<p>This component demonstrates fetching data from the server.</p>


@if (customerlist == null)
{
    <ProgressRing/>
}
else
{
       <MudTable  Items="@customerlist" Hover="true">
        <HeaderContent>
            <MudTh>Name</MudTh>
            <MudTh>ShortDesc</MudTh>
            <MudTh>Contact</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="ShortDesc">@context.ShortDesc</MudTd>
            <MudTd DataLabel="Contact">@context.Contact</MudTd>
        </RowTemplate>
         <PagerContent>
            <MudTablePager />
        </PagerContent>
        </MudTable>
        
}       
        
       
@code {
    private IEnumerable<Customer>? customerlist;
      
    protected override async Task OnInitializedAsync()
    {
        actionservice.AddNewAction = AddCategoryExecute;

        List<ParameterHelper>? parameters = new()
        {
            new ParameterHelper{ PsqlDbTypes = NpgsqlDbType.Integer, PsqlParameterName = "_customerid", PsqlParameterValue = -9, PsqlParameterDirection = System.Data.ParameterDirection.Input}
        };

        ApiHelper apiHelper = new ApiHelper { IsStoredProcedure = true, StoredProcedureName = "usp_getcustomerinfo", Parameters = parameters, SqlExecutionType = SqlExecutionTypes.ExecuteResult };

        customerlist = await service.GetDataByProcedure<Customer>(apiHelper);
      
    }

    private void AddCategoryExecute()
    {
        var options = new DialogOptions() { CloseButton = true, FullWidth = true, MaxWidth = MaxWidth.Large };
        
        DialogService.Show<DialogPopupComponent>("Dialog", options);
    }
}
