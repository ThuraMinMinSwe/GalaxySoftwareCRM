@page "/fetchdata"
@using GalaxySoftwareCRM.Shared
@using GalaxySoftwareCRM.Client.Services
@using NpgsqlTypes
@inject IDataService service
@inject ActionService actionservice
@*@inject HttpClient Http*@



<PageTitle>Category</PageTitle>

<h1>Category Pages</h1>

<p>This component demonstrates fetching data from the server.</p>


@if (categorylist == null)
{
        <div class="d-flex justify-content-center align-items-center" style="height:100px;">
        <MudProgressCircular Color="Color.Primary" Style="height:70px;width:70px;" Indeterminate="true" />
        </div>
}
else
{
    
       <MudTable Items="@categorylist" Hover="true" Breakpoint="Breakpoint.Sm" >
        <HeaderContent>
            <MudTh>Name</MudTh>
            <MudTh>ShortDesc</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Nr">@context.name</MudTd>
            <MudTd DataLabel="Sign">@context.shortdesc</MudTd>
        </RowTemplate>
         <PagerContent>
            <MudTablePager />
        </PagerContent>
        </MudTable>
        
}       
        
       
        


@code {
    private IEnumerable<Category>? categorylist;



    protected override async Task OnInitializedAsync()
    {
        actionservice.AddNewAction = AddCategoryExecute;

        List<ParameterHelper>? parameters = new()
        {
            new ParameterHelper{ PsqlDbTypes = NpgsqlDbType.Integer, PsqlParameterName = "_categoryid", PsqlParameterValue = -9, PsqlParameterDirection = System.Data.ParameterDirection.Input}
        };
        dynamic apiHelper = new ApiHelper { IsStoredProcedure = true, StoredProcedureName = "usp_getcategoryinfo", Parameters = parameters, SqlExecutionType = SqlExecutionTypes.ExecuteResult };

        categorylist = await service.GetDataByProcedure<Category>(apiHelper);

    }

    private void AddCategoryExecute()
    {
        
    }
}
